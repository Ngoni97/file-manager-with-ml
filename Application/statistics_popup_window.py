# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'C:\Users\Admin\Documents\File Manager with ML\statistics_popup_window.ui'
#
# Created by: PyQt5 UI code generator 5.15.10
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import os, sys
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtCore import (Qt, QSize, QDir, QAbstractTableModel, QModelIndex)
from PyQt5 import uic
from PyQt5.QtWidgets import QApplication, QMainWindow, QDialog
import pandas as pd

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(219, 292)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.tableView = QtWidgets.QTableView(self.centralwidget)
        self.tableView.setGeometry(QtCore.QRect(-3, 1, 221, 261))
        self.tableView.setObjectName("tableView")
        self.OkButton = QtWidgets.QPushButton(self.centralwidget)
        self.OkButton.setGeometry(QtCore.QRect(60, 260, 93, 28))
        self.OkButton.setObjectName("OkButton")
        MainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.OkButton.setText(_translate("MainWindow", "OK"))
        
class TableModel(QAbstractTableModel):
    def __init__(self, data):
        super().__init__()
        self._data = data

    def data(self, index, role):
        if role == Qt.DisplayRole:
            val  = self._data.iloc[index.row(), index.column()]
            return str(val)

    def rowCount(self, index):
        return self._data.shape[0]

    def columnCount(self, index):
        return self._data.shape[1]

    def headerData(self, section, orientation, role):
        if role == Qt.DisplayRole:
            if orientation == Qt.Horizontal:
                return str(self._data.columns[section])
            if orientation == Qt.Vertical:
                return str(self._data.index[section])        
        
class MainWindow(QMainWindow, Ui_MainWindow):
    def __init__(self, Data, *args, **kwargs):
        super(MainWindow, self).__init__(*args, **kwargs)
        self.setupUi(self)
        self._Data = Data
        
        
        data = pd.DataFrame(self._Data,
                            columns=['Total'],
                            index=['Documents', 'Images', 'Music', 'Videos', 'Programming', 'Executable'])
        
        self.model = TableModel(data)
        self.tableView.setModel(self.model)
        
        self.OkButton.clicked.connect(self.Close)
        
    def Close(self):
        self.close()
        
    
if __name__ == "__main__":
    from file_extension_tester import listDirFiles
    
    App = QApplication(sys.argv)
    documents, images, music, videos, programming, executable = listDirFiles("C:/Users/Admin/Downloads/Unsorted")
    Data = [documents, images, music, videos, programming, executable]
    window = MainWindow(Data)
    window.show()
    sys.exit(App.exec_())